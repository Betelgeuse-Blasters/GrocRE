/* eslint-disable */

import React, { useState, useEffect, useRef } from 'react';

import { Input, Button } from 'antd';
import { EditOutlined } from '@ant-design/icons';

import NutritionFacts from './components/NutritionFacts.jsx';
import Ingredients from './components/Ingredients.jsx';
import { useParams } from "react-router-dom";

import Api from '../api.js';
import * as random from '../../../Helper/RandomPhotos.js';

export const MealPage = ({recipe, changed, setChanged, editMeal}) => {
  const [meal, setMeal] = useState(recipe);
  const [editName, setEditName] = useState(false);


  const saveMeal = async() => {
    let data = {
      name: meal.recipeName,
      description: meal.recipeDescription,
      ingredients: meal.ingredients,
      servings: meal.servingSize,
      steps: meal.recipeSteps,
      nutritionFacts: meal.nutritionFacts,
      creatorId: meal.creatorId,
      mealPlanId: meal.mealPlanId,
    }

    const api = new Api('/meals');
    await api.put(`/${meal.id}`, data)
    .then((response) => {
      console.log('meal put response', response);
    })
    .catch(err => console.log('meal put err', err));
    setChanged(false)
  };

  const saveHandler = (e) => {
    e.preventDefault();
    saveMeal();
    setEditName(false);
    setChanged(true);
  };


  return (
     <div className='pb-5'>
        <div className=''>
          <div className='flex flex-row justify-center relative mb-5'>
            <div className='text-5xl font-medium'>
              {
                !editName
                  ? <>
                      {meal.recipeName}
                      <EditOutlined
                        className='ml-[1rem] text-[0.5em] align-text-top'
                        onClick={() => setEditName(true)}
                      />
                    </>
                  : <>
                      <Input
                        className='inline text-5xl font-medium w-full'
                        defaultValue={meal.recipeName}
                        onChange={(e) => setMeal({...meal, recipeName: e.target.value})}
                      />
                      <div className='flex justify-center align-center mt-2'>
                        <button
                          className='bg-blue-500 hover:bg-blue-700 text-white px-4 rounded-full shadow-md ml-5 w-[20%] h-[30%] align-middle text-2xl font-medium '
                          onClick={saveHandler}
                        >Save
                        </button>
                        <button
                          className='bg-gray-500 hover:bg-blue-700 text-white px-4 rounded-full shadow-md ml-5 w-[20%] h-[30%] align-middle text-2xl font-medium '
                          onClick={() => setEditName(false)}
                        >Cancel
                        </button>
                      </div>
                    </>
              }

            </div>
          </div>
          <hr className='mt-4 mb-5 mx-auto w-[80%]'></hr>
          <div className='w-[80%] mx-auto rounded-md p-8 bg-[#FFFFFF]/70'>
            <div className='flex flex-row ml-5'>
              <div className='flex flex-col w-1/3 relative shadow-xl rounded mr-16 ml-5'>
                <img
                  src={random.RandomPhoto()}
                  className='w-fit self-center'
                />
                <div className='mt-5 flex flex-col'>
                  <NutritionFacts meal={meal} />
                  <h2 className='text-sm font-medium mb-3 mr-3 ml-3 text-center italic'>Disclaimer: The recipes generated by GrocRE are solely provided for informational purposes and convenience. We do not take responsibility for any outcomes or consequences resulting from the use of these AI-generated recipes. Users are advised to exercise caution, verify ingredients, and use their best judgment when preparing dishes.</h2>
                </div>
              </div>
              <div className='flex flex-col w-2/3 mr-5 ml-5'>
                <div className=''>
                  <h2 className='text-2xl flex justify-center text-center'>{meal.recipeDescription}</h2>
                </div>
                <div className='border-2 border-gray-400/50 mt-5'>
                 <Ingredients meal={meal} setMeal={setMeal} saveMeal={saveMeal}/>

                </div>
                <div className='mt-5'>
                  <h1 className='text-4xl font-medium text-center mb-3'>directions: </h1>
                  <ul className='text-xl'>
                    {meal.recipeSteps.map((item, index) => (
                      <li className='mb-3' key={index}>{item}</li>
                    ))}
                  </ul>
                </div>
              </div>
            </div>
          </div>
        </div>
    </div>
  );
};